
#[include filament_runout.cfg]           #Include Filament Runout Sensor config file
[include mainsail.cfg]                  # Include configuration from mainsail.cfg file
#[include print_area_bed_mesh.cfg]

[virtual_sdcard]
path: /home/biqu/printer_data/gcodes    # Path to the virtual SD card directory
on_error_gcode: CANCEL_PRINT            # G-code to execute on error (defined in CANCEL_PRINT macro)

[gcode_arcs]
resolution: 0.1                         # Arc interpolation resolution, handles G2/G3 commands

[exclude_object]                        # Exclude object for cancellation

#[auto_speed]                            # Auto Speed Test


[force_move]
enable_force_move: true                 # Enable force move feature


#####################################################################
##                  ADXL
#####################################################################


#[adxl345]
#cs_pin: EBBCan: PB12
#spi_software_sclk_pin: EBBCan: PB10
#spi_software_mosi_pin: EBBCan: PB11
#spi_software_miso_pin: EBBCan: PB2
#axes_map: x,y,z


#####################################################################
##	                 EBB SB2209(RP2040) Config
#####################################################################
[mcu EBBCan]
canbus_uuid: b56d6a78c2d5              # Unique identifier for the CAN bus interface



#[resonance_tester]                     # Resonance tester configuration
#probe_points: 175, 175, 20             # Probe point positions
#accel_chip: beacon                    # Acceleration chip used

[mcu]                                   # Main MCU configuration
#serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_slipper-if00  # Serial port setting, this line is commented out
canbus_uuid: d7d9717ba7ef               # CAN bus UUID
canbus_interface: can0                  # CAN bus interface

#####################################################################
##	                 Temperature Monitoring
#####################################################################
#[temperature_sensor EBB_NTC]            # EBB_NTC temperature sensor configuration
#sensor_type: Generic 3950               # Sensor type
#sensor_pin: EBBCan:gpio28               # Sensor pin

[temperature_sensor BTT-MCU]            # BTT-MCU temperature sensor configuration       
sensor_type: temperature_mcu            # Sensor type

[temperature_sensor SOC]                # BTT-PI temperature sensor configuration
sensor_type: temperature_host           # Sensor type

#####################################################################
##                     Model and Acceleration
#####################################################################
[printer]                             # Printer configuration
kinematics: corexy                    # Printer type: corexy
max_velocity: 400                    # Maximum velocity (max 300)
max_accel: 11400                       # Maximum acceleration (max 4000)
max_z_velocity: 50                    # Maximum Z-axis velocity
max_z_accel: 100                      # Maximum Z-axis acceleration
minimum_cruise_ratio: 0.5             # Default 0.5
square_corner_velocity: 25            # Square corner velocity

[input_shaper]
shaper_freq_x: 129.6
shaper_type_x: 2hump_ei
shaper_freq_y: 65.4
shaper_type_y: mzv

##when tensioning belts, move toolhead to x175, y112
###****GT3: 9.85-9.88mm on the tension meter is 250Hz, plucked with an allen wrench...

#####################################################################
##                            X Axis
#####################################################################

[stepper_x]
step_pin: PE6                         # X-axis motor pulse pin setting
dir_pin: !PE5                         # X-axis motor direction pin setting
enable_pin: !PC14                     # X-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: EBBCan:PC13            # Limit switch PIN setting (X-)
position_min: 0                       # X-axis minimum travel - software limit
position_endstop: 350                 # Mechanical reset point coordinates for X-axis
position_max: 350                     # X-axis maximum travel - software limit
homing_speed: 150                     # Homing speed maximum 100
homing_retract_dist: 5                # Setback distance after the first trigger of the homing switch
homing_positive_dir: true             # Direction of homing (generally no change required)

[tmc5160 stepper_x]
cs_pin: PC13                          # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 2.0                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation


[stepper_x1]
step_pin: PD4                         # X1-axis motor pulse pin setting
dir_pin: !PD3                         # X1-axis motor direction pin setting
enable_pin: !PD6                      # X1-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)

[tmc5160 stepper_x1]
cs_pin: PD5                           # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 2.0                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation

#####################################################################
##                           Y Aixs
#####################################################################

[stepper_y]
step_pin: PC7                         # Y-axis motor pulse pin setting
dir_pin: !PC8                         # Y-axis motor direction pin setting
enable_pin: !PD2                      # Y-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: PF2                      # Limit switch PIN setting (Y-)
position_min: 0                       # Y-axis minimum travel - software limit
position_endstop: 360               # Mechanical reset point coordinates for Y-axis (change to 350 for 350 models)
position_max: 360                   # Y-axis maximum travel - software limit (change to 350 for 350 models)
homing_speed: 150                     # Homing speed maximum 100
homing_retract_dist: 5                # Setback distance after the first trigger of the homing switch
homing_positive_dir: true             # Direction of homing (generally no change required)

[tmc5160 stepper_y]
cs_pin: PC6                           # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 2.0                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation

[stepper_y1]
step_pin: PE2                         # Y1-axis motor pulse pin setting
dir_pin: !PE1                         # Y1-axis motor direction pin setting
enable_pin: !PE4                      # Y1-axis motor enable pin setting
microsteps: 32                        # Motor microsteps setting
rotation_distance: 40                 # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32)
full_steps_per_rotation: 200          # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)

[tmc5160 stepper_y1]
cs_pin: PE3                           # Chip select pin
spi_software_sclk_pin: PG8            # SPI clock pin
spi_software_mosi_pin: PG6            # SPI master out slave in pin
spi_software_miso_pin: PG7            # SPI master in slave out pin
driver_TPFD: 0                        # Driver setting
run_current: 2.0                      # Running current
spi_speed: 3500000                    # SPI speed
interpolate: True                     # Interpolation


#####################################################################
#    -------z1------- 
#   |                 |
#   |                 |
#   |                 |
#   |                 |
#   |                 |
#   |                 |
#  z0---   display ---z2
#####################################################################
##                  Z0 Axis
#####################################################################
[stepper_z]
step_pin: PB8                         # Z0-axis motor pulse pin setting
dir_pin: !PB7                         # Z0-axis motor direction pin setting
enable_pin: !PE0                      # Z0-axis motor enable pin setting
microsteps: 16                        # Motor microsteps setting
rotation_distance: 4                  # Active pulley circumference mm
endstop_pin: PF4                #probe:z_virtual_endstop        # use beacon as virtual endstop
position_endstop: 0
position_max: 235                     # Z0-axis maximum travel - software limit
position_min: -5.0                    # Z0-axis minimum travel - software limit
homing_speed: 20                      # Homing speed
homing_retract_dist: 0                # beacon needs this to be set to 0
homing_positive_dir: False            # Direction of homing (generally no change required)

#--------------------------------------------------------------------
[tmc2209 stepper_z]                   # TMC2209 driver settings
uart_pin: PB9                         # Driver communication port
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current: 0.8                     # Holding current (mA)

#--------------------------------------------------------------------
[stepper_z1]
step_pin: PB4                         # Z1-axis motor pulse pin setting
dir_pin: !PB3                         # Z1-axis motor direction pin setting
enable_pin: !PB6                      # Z1-axis motor enable pin setting
microsteps: 16                        # Motor microsteps setting
rotation_distance: 4                  # Active pulley circumference mm

#--------------------------------------------------------------------
[tmc2209 stepper_z1]                  # TMC2209 driver settings
uart_pin: PB5                         # Driver communication port
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current: 0.8                     # Holding current (mA)

#--------------------------------------------------------------------
[stepper_z2]
step_pin: PG13                        # Z2-axis motor pulse pin setting
dir_pin: !PG12                        # Z2-axis motor direction pin setting
enable_pin: !PG15                     # Z2-axis motor enable pin setting
microsteps: 16                        # Motor microsteps setting
rotation_distance: 4                  # Active pulley circumference mm

#--------------------------------------------------------------------
[tmc2209 stepper_z2]                  # TMC2209 driver settings
uart_pin: PG14                        # Driver communication port
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current: 0.8                     # Holding current (mA)




#####################################################################
##                  SYNC MOTORS
#####################################################################

#[motors_sync]
#axes: x,y
#    Axes on which calibration will be performed.
#accel_chip: adxl345
#    Accelerometer for vibrations collection: adxl345 / mpu9250 etc.
#encoder_chip_<axis>:
#    Axis, assigned encoder name, for measuring deviations.
#chip_filter: median
#    Filter type for data from the accelerometer: 'median' works well in
#    most cases, but some particularly noisy printers (fans, etc.) may
#    require a more powerful filter - 'kalman'. On lis2dw filters disabled.
#median_size: 3
#    Median filter window size.
#kalman_coeffs: 1.1, 1., 1e-1, 1e-2, .5, 1.
#    Simple coefficients describing the kalman filter.
#microsteps: 16
#    Maximum microstepping displacement of the stepper motor rotor.
#sync_method: default
#    Methods for synchronizing two axes on interconnected kinematics:
#    'alternately' - the axes calibrated alternately, step by step. (default)
#    'synchronous' - the axes calibrated depending on their magnitude,
#    trying to keep it at the same level.
#    Methods for synchronizing axis/axes on NOT-interconnected kinematics:
#    'sequential' - axes are calibrated sequentially. (default)
#steps_model: linear, 20000, 0
#    Mathematical model and its coefficients representing the dependence
#    of stepper motor microstep displacement on the measured magnitude.
#max_step_size: 3
#    The maximum number of microsteps that the motor can take move at time,
#    to achieve the planned magnitude.
#axes_steps_diff: 4
#    The difference in the positions of the motors in microsteps between
#    the two axes, to update the magnitude of the secondary axis. It is
#    used in the synchronous method, or in the process of axis alignment
#    in the alternately method. The typical value is max_step_size + 1.
#retry_tolerance: 0
#    The forced threshold to which a pair of stepper motors on one belt
#    will have to lower the magnitude of the oscillations. It's recommended
#    to configure in order to filter possible inaccuracies. After several
#    iterations of starting synchronization, you will find the edge, to
#    which this parameter should be omitted.
#retries: 0
#    The maximum number of repetitions to achieve the forced threshold of
#    oscillations.
#head_fan:
#    Toolhead fan, which will be turned off during sync to eliminate noise.



#####################################################################
##                  Extruder Motor
#####################################################################

[extruder]
step_pin: EBBCan: PD0              # Step pin
dir_pin: !EBBCan: PD1               # Direction pin, "!" indicates logic inversion
enable_pin: !EBBCan: PD2           # Enable pin, "!" indicates logic inversion
full_steps_per_rotation: 200         # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
microsteps: 16                       # Microsteps setting
## When calibrating the extruder, update the following value
## Assume you request 100mm feed but get 98mm,
## New value = old value x (actual extruded length / target length)
## 22.6789511 is our recommended value
rotation_distance: 48.000         # CW2 22.225 #0.4 CHT       # Rotation distance              #0.6 phaetus 21.771793056

nozzle_diameter: 0.600               # Nozzle diameter
filament_diameter: 1.750             # Filament diameter
heater_pin: EBBCan: PA2             # Heater pin
control: pid                         # Control method
pid_Kp: 24.328                       # Proportional parameter of the PID controller
pid_Ki: 1.908                        # Integral parameter of the PID controller
pid_Kd: 77.543                       # Derivative parameter of the PID controller
min_temp: -20                        # Minimum temperature
max_temp: 350                        # Maximum temperature
min_extrude_temp: 170                # Minimum extrude temperature
pressure_advance: 0.00175               # Pressure advance - try to keep pressure below 1.0
pressure_advance_smooth_time: 0.040   # Pressure advance smooth time - default is 0.040
## Nozzle temperature PID calibration command: "PID_CALIBRATE HEATER=extruder TARGET=245"
sensor_type: MAX31865                # Temperature sensor type
sensor_pin: EBBCan: PA4             # Sensor pin
spi_software_sclk_pin: EBBCan: PA5 # SPI clock pin
spi_software_mosi_pin: EBBCan: PA7  # SPI master out slave in pin
spi_software_miso_pin: EBBCan: PA6 # SPI master in slave out pin
rtd_nominal_r: 100                   # RTD nominal resistance
rtd_reference_r: 430                 # RTD reference resistance
rtd_num_of_wires: 2                  # Number of wires for the RTD
max_extrude_only_distance: 250       #increase this if manually commanding to extrude over this amount

[tmc2209 extruder]
uart_pin: EBBCan: PA15              # UART communication pin
interpolate: true                    # Enable 256 microstep interpolation
run_current: 0.58                      #CW2 0.7                    # Running current

#--------------------------------------------------------------------
[verify_heater extruder]             # Heater block temperature tolerance configuration
max_error: 120                       # Maximum error
check_gain_time: 120                 # Tolerance time
hysteresis: 50                       # Tolerance temperature
heating_gain: 2                      # Heating gain

#####################################################################
##                  Heated Bed
#####################################################################
[heater_bed]
heater_pin: PA1                        # (BE0) Heater pin
sensor_pin: PB1                        # Sensor interface (TB) sensor pin
sensor_type: ATC Semitec 104GT-2       # ATC Semitec 104GT-2 temperature sensor type
control: pid                           # Control method
## Heated bed temperature PID calibration command: "PID_CALIBRATE HEATER=heater_bed TARGET=100"
pid_kp: 53.467                         # PID Kp value
pid_ki: 0.931                          # PID Ki value
pid_kd: 767.921                        # PID Kd value
min_temp: -20                          # Minimum temperature
max_temp: 135                          # Maximum temperature
max_power: 1.0                         # Maximum power
pwm_cycle_time: 0.01666

#####################################################################
##                          Idle Timeout for Heated Bed
#####################################################################

[idle_timeout]
timeout: 5400                # Turn off heated bed if idle for more than 45 minutes





#####################################################################
##                  Beacon Scanner
#####################################################################

#[beacon]
#serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_60B9D9105157355957202020FF101926-if00
#x_offset: -25 # update with offset from nozzle on your machine
#y_offset: 0 # update with offset from nozzle on your machine
#mesh_main_direction: x
#mesh_runs: 2

##Safe Z Home
#home_xy_position: 175, 175 # update for your machine
#z_hop: 3



#####################################################################
##                  Bed Mesh Calibration
#####################################################################
[bed_mesh]
zero_reference_position: 175,175  #    This option is suitable for the 350 model.  #    set this to the middle of your bed
speed: 350                         #    movement speed of toolhead during bed mesh
horizontal_move_z: 5              #    height of scanner during bed mesh scan
mesh_min: 30, 30                  #    start point of bed mesh [X, Y]
mesh_max: 320, 320                #    end point of bed mesh [X, Y]
probe_count: 50, 50  #30, 30
adaptive_margin: 5
scan_overshoot: 7 #3
algorithm: bicubic

#####################################################################
##                  Fans
#####################################################################

[heater_fan hotend_fan]          # Hotend fan
pin: EBBCan: PA1               # Hotend fan pin
heater: extruder                 # Associated heating device
heater_temp: 50.0                # Temperature to start the fan
cycle_time: 0.00003                 # Cycle time

#--------------------------------------------------------------------

[heater_fan Skirt_fan]            # Skirt fan 
pin: PF9                         # FAN-2
cycle_time: 0.00003              # Cycle time
shutdown_speed: 0.0              # Closing speed (Please do not change)
kick_start_time: 0.5             # start-up time (Please do not change)
heater: heater_bed               # Related equipment: heater_bed
heater_temp: 50                  # How many degrees does the heat bed reach to activate the fan
fan_speed: 0.5                   # Fan speed

#--------------------------------------------------------------------

[controller_fan driver_fan]      # Driver cooling fan
pin: PF8                         # Fan pin 
cycle_time: 0.00003                  # Cycle time
max_power: 1.0                   # Maximum power
shutdown_speed: 0.0              # Shutdown speed
fan_speed: 0.8                   # Fan speed when heater or stepper driver is active (0.0 to 1.0). Default is 1.0.
idle_timeout: 90                 # Time in seconds to keep the fan running after the stepper driver or heater is no longer active. Default is 30 seconds.
idle_speed: 0.4                  # Fan speed after the stepper driver is no longer active and before idle_timeout is reached (0.0 to 1.0). Default is fan_speed.
stepper: stepper_x               # Active motors
#Define the name of the heater/stepper configuration section associated with this fan. 
#If a comma-separated list of heater/stepper names is provided here, the fan will be enabled when any of the given heaters/steppers are enabled.
#The default heater is "extruder", and the default stepper is all steppers.



#[controller_fan water_cool]      # water cooling system
#pin: PA0                         # Fan pin 
#cycle_time: 0.00003                  # Cycle time
#shutdown_speed: 0.0              # Shutdown speed
#fan_speed: 1.0                   # Fan speed when heater or stepper driver is active (0.0 to 1.0). Default is 1.0.
#idle_timeout: 90                 # Time in seconds to keep the fan running after the stepper driver or heater is no longer active. Default is 30 seconds.
#idle_speed: 0.4                  # Fan speed after the stepper driver is no longer active and before idle_timeout is reached (0.0 to 1.0). Default is fan_speed.
#stepper: stepper_x               # Active motors

[fan_generic water_cool]               # water cooling system
pin: PA0               # Fan pin 
cycle_time: 0.00003                  # Cycle time
hardware_pwm: false  

#--------------------------------------------------------------------

#Note: The following FAN0/FAN1/FAN2 settings are only applicable when using OrcaSlicer,
#as only OrcaSlicer allows for the additional configuration of parts cooling fans and filter fans. 
#If you use other slicing software, please comment out the following configurations.
# instead of using [fan], we define the default part cooling fan with [fan_generic] here
# this is the default part cooling fan

[fan_generic fan0]               # 5015 Part cooling Blower 
pin: EBBCan: PA0               # Fan pin 
#cycle_time: 0.01               #0.00003                  # Cycle time
#hardware_pwm: false              # hardware pwm
kick_start_time: 0.5
off_below: 0.10

#--------------------------------------------------------------------

#[fan_generic fan2]               # 12032 Auxiliary Part cooling Blower 
#pin:                          # Fan pin
#cycle_time: 0.00003              # Cycle time
#hardware_pwm: false              # hardware pwm
#kick_start_time: 0.5             # start-up time (Please do not change)

#--------------------------------------------------------------------

[fan_generic fan3]               # Fume_Pack Exhaust Fan
pin: PF6                         # Fan pin     
cycle_time: 0.00003                 # Cycle time
hardware_pwm: false               # hardware pwm
kick_start_time: 0.5             # start-up time (Please do not change)

#--------------------------------------------------------------------

[gcode_macro M106]
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}


#---------------------------------------------------------------------



#####################################################################
##                            Chamber LEDs
#####################################################################

#[output_pin caselight]
#pin = PA3
#pwm = true
#shutdown_value = 0
#value = 100
#cycle_time = 0.01
#scale = 100

[output_pin daylight]
pin: PA5
pwm: True
cycle_time: 0.01

[delayed_gcode ENABLE_LEDS]
initial_duration: 1
gcode:
    LED_ON

[gcode_macro LED_ON]
gcode:
    SET_PIN pin=daylight value=1.0  # Adjust brightness as needed (1.0 = full brightness)


[delayed_gcode daylight_half_power]
gcode: 
	SET_PIN PIN=daylight VALUE=0.25
initial_duration = 10.0


[gcode_macro lights_off]
gcode: 
	SET_PIN PIN=daylight VALUE=0
    

[gcode_macro lights_on]
gcode: 
	SET_PIN PIN=daylight VALUE=1
    

[gcode_macro lights_toggle]
gcode: 
	{% if printer["output_pin daylight"].value == 1 %}
	lights_off
	{% else %}
	lights_on
	{% endif %}

[gcode_macro lights_50]
gcode: 
	SET_PIN PIN=daylight VALUE=0.5

[gcode_macro lights_25]
gcode: 
	SET_PIN PIN=daylight VALUE=0.25

[gcode_macro lights_10]
gcode: 
	SET_PIN PIN=daylight VALUE=0.1

[gcode_macro lights_5]
gcode: 
	SET_PIN PIN=daylight VALUE=0.05

[gcode_macro lights_1]
gcode:
	SET_PIN PIN=daylight VALUE=0.01



#####################################################################
##                            RGB-LED Lights
#####################################################################

#[neopixel hotend_rgb]
#pin: EBBCan:gpio16            # LED pin
#chain_count: 3                # Number of LEDs
#color_order: GRBW             # Color order
#initial_RED: 0.2              # Initial red brightness
#initial_GREEN: 0.2            # Initial green brightness
#initial_BLUE: 0.2             # Initial blue brightness

#[neopixel my_neopixel]
#pin: PD15                     # Signal interface
#chain_count: 50               # Number of LEDs
#color_order: GRB              # Color order
#initial_RED: 0.2              # Initial red brightness
#initial_GREEN: 0.2            # Initial green brightness
#initial_BLUE: 0.2             # Initial blue brightness





####################################################################################
##                                    Homing Override
####################################################################################
[homing_override]
axes: z                    # Override homing for the Z axis only
set_position_z: 0           # Set the Z position to 0 after homing
gcode:
    G90                     # Set to absolute positioning mode
    G0 Z10 F1200            # Move Z axis to 10mm above the bed at 1200 mm/min
    G28 Y                   # Home Y axis
    G28 X                   # Home X axis
    G1 X175 Y175 F7200      # Move to a specific coordinate (125, 125) at 7200 mm/min
    G28 Z                   # Home Z axis again

####################################################################################
##                                    Z Tilt Adjustment
####################################################################################
[z_tilt]
##  Use Z_TILT_ADJUST to level the bed.
##  z_positions: Location of toolhead
z_positions:
   -50, 18
   175, 398
   400, 18
points:
   50, 50
   175, 300
   300, 50
##--------------------------------------------------------------------

speed: 300                 # Speed of Z tilt adjustment
horizontal_move_z: 5 #2       # Z axis move speed for adjustments
retries: 10                # Number of retries for adjustment points
retry_tolerance: 0.0075    # Retry tolerance for adjustment accuracy

####################################################################################
####################################################################################
[gcode_macro Z_TILT_ADJUST]     # IDM/Cartographer optimized 3Z leveling macro
rename_existing: _Z_TILT_ADJUST
gcode:
    SAVE_GCODE_STATE NAME=STATE_Z_TILT         # Save current state for Z tilt adjustment
    BED_MESH_CLEAR                             # Clear bed mesh
    {% if not printer.z_tilt.applied %}
      _Z_TILT_ADJUST horizontal_move_z=10 retry_tolerance=1   # Adjust Z tilt with higher tolerance initially
    {% endif %}
    _Z_TILT_ADJUST horizontal_move_z=2          # Fine-tune Z tilt adjustment
    RESTORE_GCODE_STATE NAME=STATE_Z_TILT       # Restore saved state after adjustment


[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state




 





####################################################################################
##                               Bed Leveling and Height Calibration Macro
####################################################################################
[gcode_macro G32]
# Defines a G-code macro for bed leveling and height calibration
gcode:
    BED_MESH_CLEAR               # Clear bed mesh
    G28                          # Home all axes
    Z_TILT_ADJUST                # Perform gantry leveling
    G28                          # Home all axes
    G0 X175 Y175 Z30 F3600       # Fast move to X150 Y150 Z30 at 3600 mm/min

#--------------------------------------------------------------------
[gcode_macro DRAW_LINES]
gcode:
    G90                           # Absolute positioning
    # G92 E0                      # Reset Extruder (commented out for now)
    # G1 Z5.0  F7200              # Move Z Axis up (commented out for now)
    G1 X50  Y0         F7200      # Move to start position
    M83                           # Set extruder to relative mode
    G1 E15 F400                   # Extrude filament
    G1 Z0.28 F7200                # Lower Z axis
    G1 X200 Y0   Z0.28 F1200 E17  # Draw the first line
    G1 X200 Y0.4 Z0.28 F2400      # Move to side a little
    G1 X55  Y0.4 Z0.28 F1200 E34  # Draw the second line
    G92 E0                        # Reset Extruder
    G90                           # Return to absolute positioning

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("45")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  SET_GCODE_OFFSET Z=0                                 # Set offset to 0

  # Home the printer, set absolute positioning and update the Stealthburner LEDs.
  #STATUS_HOMING                                         # Set LEDs to homing-mode
  G28                                                   # Full home (XYZ)
  
  {% if not printer.motors_sync.applied %}
    SYNC_MOTORS
  {% endif %}
  G28 Z
  G90                                                   # Absolute position

  ##  Uncomment for bed mesh (1 of 2 for bed mesh)
  #BED_MESH_CLEAR                                       # Clear old saved bed mesh (if any)

  # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
    #STATUS_HEATING                                      # Set LEDs to heating-mode
    M106 S255                                           # Turn on the PT-fan

    ##  Uncomment if you have a Nevermore.
    #SET_PIN PIN=nevermore VALUE=1                      # Turn on the nevermore

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
   ### SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
   ### TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber temp

  # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
   # STATUS_HEATING                                      # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
    M190 S{target_bed}                                  # Set the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
    G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
  {% endif %}

  # Heat hotend to 150c. This helps with getting a correct Z-home.
  SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
  M109 S150                                             # Heat hotend to 150c

  ##  Uncomment for Trident (Z_TILT_ADJUST)
  SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
 # STATUS_LEVELING                                      # Set LEDs to leveling-mode
  Z_TILT_ADJUST                                        # Level the printer via Z_TILT_ADJUST
  G28 Z                                                # Home Z again after Z_TILT_ADJUST                                

  ##  Uncomment for bed mesh (2 of 2 for bed mesh)
  SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
 # STATUS_MESHING                                       # Set LEDs to bed mesh-mode
  BED_MESH_CALIBRATE ADAPTIVE=1                                   # Start the bed mesh (add ADAPTIVE=1) for adaptive bed mesh
  #PROFILE="default"

  BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX} FORCE_NEW_MESH=True              #CARTOGRAPHER_TOUCH                                    # Calibrate z offset only with hot nozzle

  # Heat up the hotend up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
  #STATUS_HEATING                                        # Set LEDs to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
  M107                                                  # Turn off partcooling fan
  M109 S{target_extruder}                               # Heat the hotend to set temp

  SET_FAN_SPEED FAN=water_cool SPEED=100                #Turn on water cooling system

  # Get ready to print by doing a primeline and updating the LEDs
  SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
 # STATUS_PRINTING                                       # Set LEDs to printing-mode
  G0 X{x_wait - 50} Y4 F10000                           # Go to starting point
  G0 Z0.4                                               # Raise Z to 0.4
  G91                                                   # Incremental positioning 
  G1 X100 E50 F1000                                     # Primeline
  G90                                                   # Absolute position

#--------------------------------------------------------------------
[gcode_macro PRINT_END]
gcode:
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-30.0 F3600                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=fan0 SPEED=0
    #SET_FAN_SPEED FAN=fan2 SPEED=0
    SET_FAN_SPEED FAN=fan3 SPEED=0
    SET_FAN_SPEED FAN=water_cool SPEED=0                #Turn off water cooling system

    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
#--------------------------------------------------------------------
[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
#--------------------------------------------------------------------
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
#--------------------------------------------------------------------

[gcode_macro CANCEL_PRINT]
# Defines a G-code macro to cancel the actual running print
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
variable_park = True
gcode = 
    G28 Y                                     # Home Y axis
    _TOOLHEAD_PARK_PAUSE_CANCEL               # Call _TOOLHEAD_PARK_PAUSE_CANCEL macro
    TURN_OFF_HEATERS                          # Turn off all heaters
    CANCEL_PRINT_BASE                         # Call CANCEL_PRINT_BASE to cancel print
    SET_FAN_SPEED FAN=fan0 SPEED=0
    #SET_FAN_SPEED FAN=fan2 SPEED=0
    SET_FAN_SPEED FAN=fan3 SPEED=0
    SET_FAN_SPEED FAN=water_cool SPEED=0
